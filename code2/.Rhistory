source('header.R')
#################################################################################################
# Arcidiacono and Miller (2011) coding assignment
# Matt Beamer & Cheng-Yu Chan
# 11/08/2014
#################################################################################################
source('header.R')
setwd("~/Projects/OPNS 523/Arcidiacono-2011/code2")
################################################################################################
source('header.R')
data<- readRDS(paste0(varSave,"engines_data.rds"))
#################################################################################################
# Global parameters. Will not be passing into functions.
#################################################################################################
s.val <- c(1,4)
beta = .99
N = 10^6
x_m <- max(data$replace_Period) + 10
CCP <- expand.grid(s=s.val, x.t=seq(0, x_m), prob.replace=.5, prob.dont.replace=.5)
theta <- c(10,1)
pi_s = .25
################################################################################################
source('header.R')
data<- readRDS(paste0(varSave,"engines_data.rds"))
#################################################################################################
# Global parameters. Will not be passing into functions.
#################################################################################################
s.val <- c(1,4)
beta = .99
N = 10^6
x_m <- max(data$replace_Period) + 10
CCP <- expand.grid(s=s.val, x.t=seq(0, x_m), prob.replace=.5, prob.dont.replace=.5)
theta <- c(10,1)
pi_s = .25
q.s <- gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s)) %>%
group_by(s) %>%
mutate(likelihood = likelihood * pi_s) %>%
ungroup %>%
group_by(x.t) %>%
summarise(q_1 = likelihood[1]/sum(likelihood), q_2 = likelihood[2]/sum(likelihood)) %>%
ungroup
CCP
gamma.Operator(CCP = CCP, theta = theta, beta = beta)
plot(gamma.Operator <- function(CCP, theta, beta){
#Inputs: dataframe of CCPs, CCP, and a vector of cost parameters, theta
#Output: dataframe of CCPs after one value function iteration
group_by(CCP, s) %>%
mutate(
CCP.replace = first(prob.replace),
CCP.dont.replace = lead(prob.replace, default=last(prob.replace), order_by=x.t),
f = theta[1]*s-theta[2]*x.t+beta*(log(CCP.replace)-log(CCP.dont.replace)),
#for precision, calculate and store CCP and 1-CCP seperatly
prob.replace = 1/(1+exp(f)),
prob.dont.replace = exp(f)/(1+exp(f))
) %>%
select(-c(CCP.replace, CCP.dont.replace, f)) %>%
ungroup
})
plot(gamma.Operator(CCP = CCP, theta = theta, beta = beta))
gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood
q.s <- gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s))
gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s))
gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s)) %>%
group_by(s) %>%
mutate(likelihood = likelihood * pi_s)
q.s <- gamma.Operator(CCP = CCP, theta = theta, beta = beta) %>%
CCP.to.likelihood %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s)) %>%
group_by(s) %>%
mutate(likelihood = likelihood * pi_s) %>%
ungroup %>%
group_by(x.t) %>%
summarise(q_1 = likelihood[1]/sum(likelihood), q_2 = likelihood[2]/sum(likelihood)) %>%
ungroup
View(q.s)
q.s <- CCP.to.likelihood(CCP) %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s)) %>%
group_by(s) %>%
mutate(likelihood = likelihood * pi_s) %>%
ungroup %>%
group_by(x.t) %>%
summarise(q_1 = likelihood[1]/sum(likelihood), q_2 = likelihood[2]/sum(likelihood)) %>%
ungroup
# (2.18): compute next iteration of pi_s
pi_s <- last(cumsum(q.s$q_1 * c(data$Total_replaced,rep(0,10))),order_by = q.s$x.t) / N
View(q.s)
?last
View(q.s)
View(CCP)
?optim
CCPhat <- gamma.Operator(CCP = CCP, theta = theta, beta = beta)
View(CCPhat)
View(CCP)
pi_s = .27
q.s <- CCP.to.likelihood(CCP) %>%
mutate(pi_s = ifelse(s == s.val[1], pi_s, 1 - pi_s)) %>%
group_by(s) %>%
mutate(likelihood = likelihood * pi_s) %>%
ungroup %>%
group_by(x.t) %>%
summarise(q_1 = likelihood[1]/sum(likelihood), q_2 = likelihood[2]/sum(likelihood)) %>%
ungroup
# (2.18): compute next iteration of pi_s
pi_s <- last(cumsum(q.s$q_1 * c(data$Total_replaced,rep(0,10))),order_by = q.s$x.t) / N
View(CCP)
CCPhat <- gamma.Operator(CCP = CCP, theta = theta, beta = beta)
View(CCPhat)
## "wild" function , global minimum at about -15.81515
fw <- function (x)
10*sin(0.3*x)*sin(1.3*x^2) + 0.00001*x^4 + 0.2*x+80
plot(fw, -50, 50, n = 1000, main = "optim() minimising 'wild function'")
View(data)
View(CCPhat)
View(CCPhat)
View(q.s)
?group_by
by_cyl <- group_by(mtcars, cyl)
View(by_cyl)
mtcars
?merge
?join
c<-data
gamma.Operator(CCP = P, theta = theta, beta = beta)%>%
left_join(y = mutate(c,x.t = replace_Period), by x.t)
c<- mutate(data,x.t = replace_Period)
gamma.Operator(CCP = P, theta = theta, beta = beta)%>%
left_join(y = c, by x.t)
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by x.t)
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = x.t)
P<-CCP
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = x.t)
c<-data
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period"))
?replace
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(logl = log(prob.replace^(s*Total_replaced)))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
select()
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
left_join(y = q.s, by = c("x.t" = "x.t"))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)
)
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(Total_replaced!=NA, Total_replaced,0))
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(Total_replaced!=NA, Total_replaced,0))
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl)
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(Total_replaced!=NA, Total_replaced,0)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(Total_replaced!=NA, Total_replaced,0)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl)
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(Total_replaced!=NA, Total_replaced,0))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period"))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced2 = ifelse(Total_replaced==NA, 0, Total_replaced))
test<-gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced2 = ifelse(Total_replaced==NA, 0, Total_replaced))
test
test$Total_replaced[1]
test$Total_replaced[1]->tester
tester
test$Total_replaced[35]->tester
tester
tester==NA
tester=='NA'
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced2 = ifelse(is.na(Total_replaced), 0, Total_replaced))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(is.na(Total_replaced), 0, Total_replaced)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
theta <- optim(theta, MLE,
c = data, P = CCP,
method = 'L-BFGS-B', lower = c(0,0))
MLE<- function(t, c, P){
gamma.Operator(CCP = P, theta = t, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(is.na(Total_replaced), 0, Total_replaced)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
}
theta <- optim(theta, MLE,
c = data, P = CCP,
method = 'L-BFGS-B', lower = c(0,0))
theta
gamma.Operator(CCP = P, theta = t, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(is.na(Total_replaced), 0, Total_replaced)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s))
gamma.Operator(CCP = P, theta = theta, beta = beta) %>%
left_join(y = c, by = c("x.t" = "replace_Period")) %>%
mutate(Total_replaced = ifelse(is.na(Total_replaced), 0, Total_replaced)) %>%
left_join(y = q.s, by = c("x.t" = "x.t")) %>%
mutate(q.s = ifelse(s == s.val[1], q_1, q_2)) %>%
mutate(logl = -1 * Total_replaced * log(prob.replace^q.s)) %>%
select(logl) %>%
sum
gamma.Operator(CCP = P, theta = theta, beta = beta)
